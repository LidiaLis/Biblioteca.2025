/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aplicacao;

import aplicacao.DialogEmprestimo.Modo;
import dao.DAOFactory;
import dao.EmprestimoDAO;
import dao.EmprestimoDAOJDBC;
import java.awt.Component;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import modelo.Emprestimo;
import modelo.Usuario;

/**
 *
 * @author Lídia Lis
 */
public class FrmEmprestimo extends javax.swing.JFrame {

    EmprestimoDAO emprestimoDAO = DAOFactory.criarEmprestimoDAO();
    DefaultTableModel modelo = null;
   SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");

    /**
     * Creates new form frmAcervo
     */
    public FrmEmprestimo() {
        initComponents();
        modelo = (DefaultTableModel) tblAcervo.getModel();
        preencherTabela();
        atualizarTabela();
    }
    
    private void atualizarTabela(String campo, Object valor) {
    DefaultTableModel model = (DefaultTableModel) tblAcervo.getModel();
    model.setRowCount(0);

    EmprestimoDAOJDBC dao = new EmprestimoDAOJDBC();
    List<Emprestimo> emprestimos = dao.listarPorCampo(campo, valor);

    if (emprestimos.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Nenhum empréstimo encontrado com o filtro aplicado.");
    }

    for (Emprestimo emprestimo : emprestimos) {
        model.addRow(new Object[]{
            emprestimo.getId_emprestimo(),
            emprestimo.getId_livro().getTitulo(),
            emprestimo.getId_usuario().getNome(),
            formato.format(emprestimo.getData_emprestimo()),
            formato.format(emprestimo.getData_prevista()),
            emprestimo.getData_devolucao() != null ? formato.format(emprestimo.getData_devolucao()) : "",
            emprestimo.getStatus()
        });
    }
}

private void atualizarTabela() {
    DefaultTableModel model = (DefaultTableModel) tblAcervo.getModel();
    model.setRowCount(0);

    EmprestimoDAO dao = new EmprestimoDAOJDBC();
    List<Emprestimo> emprestimos = dao.listar();

    for (Emprestimo emprestimo : emprestimos) {
        model.addRow(new Object[]{
            emprestimo.getId_emprestimo(),
            emprestimo.getId_livro().getTitulo(),
            emprestimo.getId_usuario().getNome(),
            formato.format(emprestimo.getData_emprestimo()),
            formato.format(emprestimo.getData_prevista()),
            emprestimo.getData_devolucao() != null ? formato.format(emprestimo.getData_devolucao()) : "",
            emprestimo.getStatus()
        });
    }
}

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ScrollLivro = new javax.swing.JScrollPane();
        tblAcervo = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        btnInserir1 = new javax.swing.JButton();
        btnApagar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cbDataPrevista = new javax.swing.JComboBox<>();
        cbUsuario = new javax.swing.JComboBox<>();
        cbTitulo = new javax.swing.JComboBox<>();
        cbDataEmprestimo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cbDataDevolucao = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cbStatus = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        btnLimpar = new javax.swing.JButton();
        btnDevolucao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 244));

        ScrollLivro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ScrollLivro.setForeground(new java.awt.Color(255, 255, 204));

        tblAcervo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Emprestimo", "Título do Livro", "Leitor", "Data Emprestimo", "Data Prevista", "Data Devolução", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAcervo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblAcervoFocusGained(evt);
            }
        });
        ScrollLivro.setViewportView(tblAcervo);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recurso/edit.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setToolTipText("Edita a linha selecionada.");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnInserir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recurso/image-gallery.png"))); // NOI18N
        btnInserir1.setText("Inserir");
        btnInserir1.setToolTipText("Insere um novo livro.");
        btnInserir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserir1ActionPerformed(evt);
            }
        });

        btnApagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recurso/delete.png"))); // NOI18N
        btnApagar.setText("Apagar");
        btnApagar.setToolTipText("Apaga a linha selecionada.");
        btnApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 153, 204));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 244));

        cbDataPrevista.setToolTipText("Selecione para realizar a busca.");
        cbDataPrevista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDataPrevistaActionPerformed(evt);
            }
        });

        cbUsuario.setModel(new javax.swing.DefaultComboBoxModel(
            java.util.stream.IntStream.range(0, tblAcervo.getRowCount())
            .mapToObj(i -> tblAcervo.getValueAt(i, 1).toString())
            .toArray()
        )
    );
    cbUsuario.setToolTipText("Selecione para realizar a busca.");
    cbUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            cbUsuarioFocusGained(evt);
        }
    });
    cbUsuario.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cbUsuarioActionPerformed(evt);
        }
    });

    cbTitulo.setToolTipText("Selecione para realizar a busca.");
    cbTitulo.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cbTituloActionPerformed(evt);
        }
    });

    cbDataEmprestimo.setToolTipText("Selecione para realizar a busca.");
    cbDataEmprestimo.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cbDataEmprestimoActionPerformed(evt);
        }
    });

    jLabel5.setText("  Titulo  ");
    jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 0)));

    jLabel6.setText(" Data Emprestimo ");
    jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 0)));

    jLabel7.setText(" Leitor  ");
    jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 0)));

    jLabel4.setText(" Data Prevista ");
    jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 0)));

    jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recurso/filter.png"))); // NOI18N
    jLabel14.setText("Filtro:");

    cbDataDevolucao.setToolTipText("Selecione para realizar a busca.");
    cbDataDevolucao.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cbDataDevolucaoActionPerformed(evt);
        }
    });

    jLabel8.setText("  Data Devolução  ");
    jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 0)));

    cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Emprestado", "Devolvido", "Atrasado" }));
    cbStatus.setToolTipText("Selecione para realizar a busca.");
    cbStatus.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cbStatusActionPerformed(evt);
        }
    });

    jLabel9.setText(" Status ");
    jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 0)));

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addComponent(jLabel14)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(cbUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addComponent(jLabel7)
                    .addGap(42, 42, 42)))
            .addGap(27, 27, 27)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(39, 39, 39)
                    .addComponent(jLabel5))
                .addComponent(cbTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(29, 29, 29)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(cbDataEmprestimo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(26, 26, 26)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(cbDataPrevista, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(8, 8, 8)
                    .addComponent(jLabel4)))
            .addGap(27, 27, 27)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbDataDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(32, 32, 32)
                    .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(56, 56, 56)
                    .addComponent(jLabel9)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addGap(18, 18, 18)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jLabel9)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jLabel8)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(cbDataDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbDataEmprestimo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbDataPrevista, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)))))
            .addGap(41, 41, 41))
    );

    btnLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recurso/broom.png"))); // NOI18N
    btnLimpar.setText("Limpar");
    btnLimpar.setToolTipText("Limpa os filtros de busca.");
    btnLimpar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnLimparActionPerformed(evt);
        }
    });

    btnDevolucao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recurso/exchange_1.png"))); // NOI18N
    btnDevolucao.setText("Devolução");
    btnDevolucao.setToolTipText("Edita a linha selecionada.");
    btnDevolucao.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnDevolucaoActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(btnInserir1)
                            .addGap(46, 46, 46)
                            .addComponent(btnDevolucao)
                            .addGap(42, 42, 42)
                            .addComponent(btnEditar)
                            .addGap(41, 41, 41)
                            .addComponent(btnApagar)
                            .addGap(39, 39, 39)
                            .addComponent(btnLimpar)
                            .addGap(136, 136, 136))))))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addContainerGap(57, Short.MAX_VALUE)
            .addComponent(ScrollLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(57, 57, 57))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(416, 416, 416)
                    .addComponent(jLabel3)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ScrollLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(29, 29, 29)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnInserir1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(37, 37, 37))))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tblAcervoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblAcervoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tblAcervoFocusGained

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
    int linhaSelecionada = tblAcervo.getSelectedRow();
    if (linhaSelecionada == -1) {
    JOptionPane.showMessageDialog(this, "Selecione uma linha para editar.");
    return;
    }

    int idEmprestimo = (int) tblAcervo.getValueAt(linhaSelecionada, 0);
    DialogEmprestimo dialog = new DialogEmprestimo(this, true, Modo.EDITAR, idEmprestimo);
    dialog.setVisible(true);

    atualizarTabela();
        
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnInserir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserir1ActionPerformed
    DialogEmprestimo dialog = new DialogEmprestimo(this, true, Modo.INSERIR, null);
    dialog.setLocationRelativeTo(this);
    dialog.setVisible(true);

    atualizarTabela();

    }//GEN-LAST:event_btnInserir1ActionPerformed

    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed
    int linhaSelecionada = tblAcervo.getSelectedRow();

    if (linhaSelecionada == -1) {
        JOptionPane.showMessageDialog(this, "Selecione a linha a ser apagada!", "Aviso", JOptionPane.WARNING_MESSAGE);
        return;
    }

    int confirmacao = JOptionPane.showConfirmDialog(
        this,
        "Tem certeza que deseja apagar essa linha?",
        "Confirmar exclusão",
        JOptionPane.YES_NO_OPTION
    );

    if (confirmacao == JOptionPane.YES_OPTION) {
        int idEmprestimo = (int) tblAcervo.getValueAt(linhaSelecionada, 0);

        try {
            // Usa a implementação correta do DAO
            EmprestimoDAO dao = new EmprestimoDAOJDBC();

            // Tenta apagar do banco
            int sucesso = dao.apagar(idEmprestimo);

            if (sucesso > 0) {
                ((DefaultTableModel) tblAcervo.getModel()).removeRow(linhaSelecionada);
                JOptionPane.showMessageDialog(this, "Emprestimo apagado com sucesso!");
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao apagar o emprestimo!", "Erro", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException | ClassNotFoundException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao tentar apagar o emprestimo: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }


    }//GEN-LAST:event_btnApagarActionPerformed

    private void cbDataPrevistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDataPrevistaActionPerformed
    atualizarTabela("data_prevista", cbDataPrevista.getSelectedItem().toString());
    }//GEN-LAST:event_cbDataPrevistaActionPerformed

    private void cbTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTituloActionPerformed
    atualizarTabela("titulo", cbTitulo.getSelectedItem().toString());
    }//GEN-LAST:event_cbTituloActionPerformed

    private void cbUsuarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbUsuarioFocusGained
    }//GEN-LAST:event_cbUsuarioFocusGained

    private void cbUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUsuarioActionPerformed
    atualizarTabela("usuario", cbUsuario.getSelectedItem().toString());
    }//GEN-LAST:event_cbUsuarioActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
EmprestimoDAO dao = new EmprestimoDAOJDBC();

DefaultComboBoxModel<Usuario> modeloUsuarios = new DefaultComboBoxModel<>();
for (Emprestimo l : dao.listar()) {
    Usuario u = l.getId_usuario();
    boolean jaExiste = false;
    for (int i = 0; i < modeloUsuarios.getSize(); i++) {
        if (modeloUsuarios.getElementAt(i).getId_usuario() == u.getId_usuario()) {
            jaExiste = true;
            break;
        }
    }
    if (!jaExiste) {
        modeloUsuarios.addElement(u); // adiciona só se ainda não tiver
    }
}
cbUsuario.setModel(modeloUsuarios);

// Título
DefaultComboBoxModel<String> modeloTitulo = new DefaultComboBoxModel<>();
for (Emprestimo l : dao.listar()) {
    String titulo = l.getId_livro().getTitulo();
    if (modeloTitulo.getIndexOf(titulo) == -1) {
        modeloTitulo.addElement(titulo);
    }
}
cbTitulo.setModel(modeloTitulo);

// Data de Empréstimo
DefaultComboBoxModel<String> modeloDataEmprestimo = new DefaultComboBoxModel<>();
SimpleDateFormat sdfEmp = new SimpleDateFormat("MM/yyyy");
for (Emprestimo l : dao.listar()) {
    String dataEmp = sdfEmp.format(l.getData_emprestimo());
    if (modeloDataEmprestimo.getIndexOf(dataEmp) == -1) {
        modeloDataEmprestimo.addElement(dataEmp);
    }
}
cbDataEmprestimo.setModel(modeloDataEmprestimo);

// Data Prevista
DefaultComboBoxModel<String> modeloDataPrevista = new DefaultComboBoxModel<>();
SimpleDateFormat sdfPrev = new SimpleDateFormat("MM/yyyy");
for (Emprestimo l : dao.listar()) {
    String dataPrev = sdfPrev.format(l.getData_prevista());
    if (modeloDataPrevista.getIndexOf(dataPrev) == -1) {
        modeloDataPrevista.addElement(dataPrev);
    }
}
cbDataPrevista.setModel(modeloDataPrevista);

// Data Devolução
DefaultComboBoxModel<String> modeloDataDevolucao = new DefaultComboBoxModel<>();
SimpleDateFormat sdfDev = new SimpleDateFormat("MM/yyyy");
for (Emprestimo l : dao.listar()) {
    String dataPrev = sdfDev.format(l.getData_devolucao());
    if (modeloDataDevolucao.getIndexOf(dataPrev) == -1) {
        modeloDataDevolucao.addElement(dataPrev);
    }
}
cbDataDevolucao.setModel(modeloDataDevolucao);


    }//GEN-LAST:event_formWindowGainedFocus

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        ajustarLarguraColunas(tblAcervo);
        
        tblAcervo.getColumnModel().getColumn(6).setPreferredWidth(80);   // Coluna Data



    }//GEN-LAST:event_formWindowOpened

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        cbUsuario.setSelectedIndex(0);      // ou valorInicialDoador se quiser
        cbTitulo.setSelectedIndex(0);
        cbDataEmprestimo.setSelectedIndex(0);
        cbDataPrevista.setSelectedIndex(0);

        atualizarTabela();        // TODO add your handling code here:
    }//GEN-LAST:event_btnLimparActionPerformed

    private void cbDataEmprestimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDataEmprestimoActionPerformed
        atualizarTabela("data_emprestimo", cbDataEmprestimo.getSelectedItem().toString());
    }//GEN-LAST:event_cbDataEmprestimoActionPerformed

    private void cbDataDevolucaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDataDevolucaoActionPerformed
    atualizarTabela("data_devolucao", cbDataDevolucao.getSelectedItem().toString());
    }//GEN-LAST:event_cbDataDevolucaoActionPerformed

    private void cbStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStatusActionPerformed
    atualizarTabela("status", cbStatus.getSelectedItem().toString());
    }//GEN-LAST:event_cbStatusActionPerformed

    private void btnDevolucaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolucaoActionPerformed
    int linhaSelecionada = tblAcervo.getSelectedRow();
        if (linhaSelecionada == -1) {
        JOptionPane.showMessageDialog(this, "Selecione uma linha para editar.");
        return;
        }

        int idEmprestimo = (int) tblAcervo.getValueAt(linhaSelecionada, 0);
        DialogEmprestimo dialog = new DialogEmprestimo(this, true, Modo.DEVOLVER, idEmprestimo);
        dialog.setVisible(true);

        atualizarTabela();
    }//GEN-LAST:event_btnDevolucaoActionPerformed

    /**
     * @param args the command line arguments
     */


     private void preencherTabela() {
    modelo.getDataVector().clear();
    try {
        for (Emprestimo emprestimo : emprestimoDAO.listar()) {
            String dataDevolucao = emprestimo.getData_devolucao() != null
                    ? formato.format(emprestimo.getData_devolucao())
                    : "—"; // mostra traço se ainda não devolveu

            String status;
            if (emprestimo.getData_devolucao() == null) {
                status = "Em andamento";
            } else if (emprestimo.getData_devolucao().after(emprestimo.getData_prevista())) {
                status = "Devolvido com atraso";
            } else {
                status = "Devolvido no prazo";
            }

            modelo.addRow(new Object[]{
                emprestimo.getId_emprestimo(),
                emprestimo.getId_livro().getTitulo(),
                emprestimo.getId_usuario().getNome(),
                formato.format(emprestimo.getData_emprestimo()),
                formato.format(emprestimo.getData_prevista()),
                dataDevolucao,
                status
            });
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erro ao carregar tabela: " + e.getMessage(),
                                      "Erro", JOptionPane.ERROR_MESSAGE);
    }
}

    public void ajustarLarguraColunas(JTable table) {
    for (int col = 0; col < table.getColumnCount(); col++) {
        TableColumn column = table.getColumnModel().getColumn(col);
        int larguraMaxima = 0;

        // Verifica largura das células
        for (int row = 0; row < table.getRowCount(); row++) {
            TableCellRenderer renderer = table.getCellRenderer(row, col);
            Component comp = table.prepareRenderer(renderer, row, col);
            larguraMaxima = Math.max(comp.getPreferredSize().width, larguraMaxima);
        }

        // Verifica largura do cabeçalho
        TableCellRenderer headerRenderer = table.getTableHeader().getDefaultRenderer();
        Component headerComp = headerRenderer.getTableCellRendererComponent(
                table, column.getHeaderValue(), false, false, 0, col);
        larguraMaxima = Math.max(larguraMaxima, headerComp.getPreferredSize().width);

        // Adiciona uma margem extra
        larguraMaxima += 10;
        column.setPreferredWidth(larguraMaxima);
    }
}

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmEmprestimo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmEmprestimo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmEmprestimo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmEmprestimo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmEmprestimo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollLivro;
    private javax.swing.JButton btnApagar;
    private javax.swing.JButton btnDevolucao;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnInserir1;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JComboBox<String> cbDataDevolucao;
    private javax.swing.JComboBox<String> cbDataEmprestimo;
    private javax.swing.JComboBox<String> cbDataPrevista;
    private javax.swing.JComboBox<String> cbStatus;
    private javax.swing.JComboBox<String> cbTitulo;
    private javax.swing.JComboBox<Usuario> cbUsuario;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTable tblAcervo;
    // End of variables declaration//GEN-END:variables
}
